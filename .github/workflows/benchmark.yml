name: Performance Benchmark

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]
  workflow_dispatch:

jobs:
  benchmark:
    name: Run Performance Benchmarks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Link package
        run: npm link
      
      - name: Benchmark - Command Parsing
        id: parse-bench
        run: |
          echo "## ‚ö° Command Parsing Performance" > benchmark.txt
          echo "Testing command parsing speed..." >> benchmark.txt
          echo "" >> benchmark.txt
          
          # Use Node.js for cross-platform timing
          node -e "
            const { execSync } = require('child_process');
            const start = Date.now();
            for (let i = 0; i < 100; i++) {
              try {
                execSync('node dist/index.js -y echo test', { stdio: 'ignore' });
              } catch (e) {}
            }
            const end = Date.now();
            const elapsed = end - start;
            const avg = elapsed / 100;
            const perSecond = Math.floor(1000 / avg);
            
            console.log('- Total time: ' + elapsed + 'ms');
            console.log('- Average per command: ' + avg.toFixed(2) + 'ms');
            console.log('- Commands per second: ~' + perSecond);
          " >> benchmark.txt
          
          cat benchmark.txt
      
      - name: Benchmark - Risk Assessment
        run: |
          echo "" >> benchmark.txt
          echo "## üéØ Risk Assessment Performance" >> benchmark.txt
          echo "Testing risk engine speed..." >> benchmark.txt
          echo "" >> benchmark.txt
          
          node -e "
            const { execSync } = require('child_process');
            const start = Date.now();
            for (let i = 0; i < 50; i++) {
              try {
                execSync('echo n | node dist/index.js git push --force', { stdio: 'ignore' });
              } catch (e) {}
            }
            const end = Date.now();
            const elapsed = end - start;
            const avg = elapsed / 50;
            
            console.log('- Total time: ' + elapsed + 'ms');
            console.log('- Average per command: ' + avg.toFixed(2) + 'ms');
          " >> benchmark.txt
          
          cat benchmark.txt
      
      - name: Benchmark - Stats Display
        run: |
          echo "" >> benchmark.txt
          echo "## üìä Stats Display Performance" >> benchmark.txt
          echo "Testing stats rendering speed..." >> benchmark.txt
          echo "" >> benchmark.txt
          
          node -e "
            const { execSync } = require('child_process');
            const start = Date.now();
            for (let i = 0; i < 50; i++) {
              try {
                execSync('sentinel stats', { stdio: 'ignore' });
              } catch (e) {}
            }
            const end = Date.now();
            const elapsed = end - start;
            const avg = elapsed / 50;
            
            console.log('- Total time: ' + elapsed + 'ms');
            console.log('- Average per render: ' + avg.toFixed(2) + 'ms');
          " >> benchmark.txt
          
          cat benchmark.txt
      
      - name: Memory Usage Test
        run: |
          echo "" >> benchmark.txt
          echo "## üíæ Memory Usage" >> benchmark.txt
          echo "Testing memory footprint..." >> benchmark.txt
          echo "" >> benchmark.txt
          
          # Simple memory test using Node.js
          node -e "
            const { execSync } = require('child_process');
            const before = process.memoryUsage();
            try {
              execSync('node dist/index.js -y echo test', { stdio: 'ignore' });
            } catch (e) {}
            const after = process.memoryUsage();
            const heapUsed = (after.heapUsed / 1024 / 1024).toFixed(2);
            console.log('- Heap used: ~' + heapUsed + ' MB');
          " >> benchmark.txt
          
          cat benchmark.txt
      
      - name: Create benchmark summary
        run: |
          echo "## üèÜ Performance Benchmark Results" >> $GITHUB_STEP_SUMMARY
          cat benchmark.txt >> $GITHUB_STEP_SUMMARY
      
      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v8
        with:
          script: |
            const fs = require('fs');
            const benchmark = fs.readFileSync('benchmark.txt', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üèÜ Performance Benchmark Results\n\n${benchmark}\n\n---\n*Automated benchmark from workflow*`
            });
      
      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: benchmark.txt
          retention-days: 30
